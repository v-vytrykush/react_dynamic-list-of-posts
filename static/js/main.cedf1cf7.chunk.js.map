{"version":3,"sources":["api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","api/api.ts","index.tsx"],"names":["BASE_URL","getUserPosts","userId","fetch","then","response","json","getPostDetails","postId","a","catch","error","console","log","getPostComments","deleteComment","commentId","method","result","addComment","obj","body","JSON","stringify","headers","PostsList","posts","currentPost","selectedPostId","className","map","post","title","id","type","onClick","NewCommentForm","setComments","useState","name","setName","email","setEmail","setBody","handleFormSubmit","event","newComment","preventDefault","onSubmit","placeholder","value","onChange","target","PostDetails","selectedPost","comments","commentsVisible","setCommentsVisible","useEffect","handleDeleteButton","newComments","status","comment","App","setPosts","users","setUsers","setSelectedPost","currentUserId","setCurrentUserId","setSelectedPostId","splice","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cedf1cf7.chunk.js","sourcesContent":["import { Comment, Post, NewComment } from '../react-app-env';\n\nexport const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getUserPosts = (userId: string) => {\n  if (userId === '0') {\n    return fetch(`${BASE_URL}/posts/`)\n      .then(response => response.json());\n  }\n\n  return fetch(`${BASE_URL}/posts/?userId=${userId}`)\n    .then(response => response.json());\n};\n\nexport const getPostDetails = async (postId: number): Promise<Post | null> => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    });\n};\n\nexport const getPostComments = async (\n  postId: number,\n): Promise<NewComment[]> => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n\nexport const deleteComment = async (commentId: number) => {\n  await fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' })\n    .then(result => result.json());\n};\n\nexport const addComment = async (obj: Comment) => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(obj),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n\n  return response.json();\n};\n","import React from 'react';\nimport './PostsList.scss';\nimport { Post } from '../../react-app-env';\n\ninterface Props {\n  posts: Post[],\n  currentPost:(value: number) => void\n  selectedPostId: number,\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  currentPost,\n  selectedPostId,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>{`[User ${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {selectedPostId === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    currentPost(0);\n                  }}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    currentPost(post.id);\n                  }}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment, getPostComments } from '../../api/posts';\nimport { NewComment, Comment } from '../../react-app-env';\n\ninterface Props {\n  selectedPostId: number,\n  setComments: (obj: NewComment[]) => void,\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  selectedPostId,\n  setComments,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleFormSubmit = async (event: React.FormEvent) => {\n    const newComment: Comment = {\n      name,\n      email,\n      body,\n      postId: selectedPostId,\n    };\n\n    event.preventDefault();\n    await addComment(newComment);\n    getPostComments(selectedPostId)\n      .then(response => setComments(response));\n\n    setName('');\n    setBody('');\n    setEmail('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleFormSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setBody(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments, deleteComment } from '../../api/posts';\nimport { Post, NewComment } from '../../react-app-env';\n\ninterface Props {\n  selectedPost: Post,\n  selectedPostId: number,\n}\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPost,\n  selectedPostId,\n}) => {\n  const [comments, setComments] = useState<NewComment[]>([]);\n  const [commentsVisible, setCommentsVisible] = useState(true);\n\n  useEffect(() => {\n    getPostComments(selectedPostId)\n      .then(response => setComments(response));\n  }, [selectedPostId]);\n\n  const handleDeleteButton = async (id: number) => {\n    await deleteComment(id);\n    const newComments = await getPostComments(selectedPostId);\n\n    setComments(newComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setCommentsVisible(status => !status);\n          }}\n        >\n          {commentsVisible\n            ? 'Hide comments'\n            : 'Show comments' }\n        </button>\n\n        {commentsVisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    handleDeleteButton(comment.id);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import './App.scss';\nimport './styles/general.scss';\nimport React, { useState, useEffect } from 'react';\nimport { getUserPosts, getPostDetails } from './api/posts';\nimport { getUsers } from './api/api';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post, User } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  const [currentUserId, setCurrentUserId] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const currentPost = (postId: number) => {\n    setSelectedPostId(postId);\n  };\n\n  useEffect(() => {\n    getUserPosts(currentUserId)\n      .then(response => setPosts(response));\n  }, []);\n\n  useEffect(() => {\n    getUsers()\n      .then(response => setUsers(response));\n  }, []);\n\n  useEffect(() => {\n    getUserPosts(currentUserId)\n      .then(response => setPosts(response));\n  }, [currentUserId]);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(response => setSelectedPost(response));\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            onChange={(event) => {\n              setCurrentUserId(event.target.value);\n            }}\n            className=\"App__user-selector\"\n          >\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            currentPost={currentPost}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {selectedPost && (\n          <div className=\"App__content\">\n            <PostDetails\n              selectedPost={selectedPost}\n              selectedPostId={selectedPostId}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getUsers = () => {\n  return fetch(`${BASE_URL}/users/`)\n    .then(response => response.json())\n    .then(result => result.splice(0, 10));\n};\n","import ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}